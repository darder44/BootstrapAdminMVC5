@typeparam TItem
@inherits TableBase<TItem>

<div class="bootstrap-table">
    @if (ShowToolBar)
    {
        <div class="fixed-table-toolbar">
            <div class="float-left bs-bars">
                <TableToolbar>
                    @if (ShowDefaultButtons)
                    {
                        <TableToolbarButton class="btn btn-success" Icon="fa fa-plus" Title="新增" OnClick="Add" />
                        <TableToolbarButton class="btn btn-danger" Icon="fa fa-remove" Title="刪除" OnClick="Delete" />
                        <TableToolbarButton class="btn btn-primary" Icon="fa fa-pencil" Title="編輯" OnClick="Edit" />
                    }
                    @TableToolbarTemplate
                </TableToolbar>
            </div>
            <div class="float-right columns columns-right">
                @if (ShowRefresh)
                {
                    <button class="btn btn-secondary" type="button" title="刷新" @onclick="Query">
                        <i class="fa fa-refresh"></i><span>刷新</span>
                    </button>
                }
            </div>
            @if (ShowSearch)
            {
                <div class="float-right search btn-group">
                    <div class="input-group">
                        <input class="form-control search-input" type="text" placeholder="查詢" @bind="SearchText" />
                        <div class="input-group-append">
                            <button class="btn btn-secondary" type="button" title="查詢" @onclick="SearchClick">
                                <i class="fa fa-search"></i><span>查詢</span>
                            </button>
                            <button class="btn btn-secondary" type="button" title="清空過濾" @onclick="ClearSearchClick">
                                <i class="fa fa-trash"></i> <span>清空過濾</span>
                            </button>
                            @if (ShowAdvancedSearch)
                            {
                                <button class="btn btn-secondary" type="button" title="高級查詢" @onclick="AdvancedSearchClick">
                                    <i class="fa fa-search-plus"></i><span>高級查詢</span>
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    <div class="@(FixedHeader ? "table-wrapper table-fixed-header table-fixed" : "table-wrapper")">
        @if (FixedHeader)
        {
            <div class="fixed-table-header">
                <table class="table table-bordered table-hover table-selected">
                    <thead>
                        <tr>
                            @if (ShowCheckbox)
                            {
                                <th class="table-col-checkbox"><Checkbox TItem="TItem" SetCheckCallback="CheckState" OnClick="ToggleCheck"></Checkbox></th>
                            }
                            @if (ShowLineNo)
                            {
                                <th class="table-col-lineno">行号</th>
                            }
                            <TableHeader OnSort="OnSort">
                                @TableHeader?.Invoke(EditModel)
                            </TableHeader>
                            @if (ShowExtendButtons)
                            {
                                <th>@ButtonTemplateHeaderText</th>
                            }
                        </tr>
                    </thead>
                </table>
            </div>
            <div class="fixed-table-body invisible">
                <table class="table table-bordered table-hover table-selected" id="@RetrieveId()">
                    <thead>
                        <tr>
                            @if (ShowCheckbox)
                            {
                                <th class="table-col-checkbox"><Checkbox TItem="TItem" SetCheckCallback="CheckState" OnClick="ToggleCheck"></Checkbox></th>
                            }
                            @if (ShowLineNo)
                            {
                                <th class="table-col-lineno">行号</th>
                            }
                            <TableHeader OnSort="OnSort">
                                @TableHeader?.Invoke(EditModel)
                            </TableHeader>
                            @if (ShowExtendButtons)
                            {
                                <th>@ButtonTemplateHeaderText</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @for (int index = 0; index < Items.Count(); index++)
                        {
                            <tr>
                                @if (ShowCheckbox)
                                {
                                    <td class="table-col-checkbox"><Checkbox TItem="TItem" Item="Items.ElementAt(index)" SetCheckCallback="item => SelectedItems.Contains(item) ? CheckBoxState.Checked : CheckBoxState.UnChecked" OnClick="ToggleCheck"></Checkbox></td>
                                }
                                @if (ShowLineNo)
                                {
                                    <td class="table-col-lineno">@(index + 1 + (PageIndex - 1) * PageItems)</td>
                                }
                                @RowTemplate?.Invoke(Items.ElementAt(index))
                                @if (ShowExtendButtons)
                                {
                                    <td>@ButtonTemplate?.Invoke(Items.ElementAt(index))</td>
                                }
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>@TableFooter</tr>
                    </tfoot>
                </table>
            </div>
        }
        else
        {
            <table class="table table-striped table-bordered table-hover table-selected" id="@($"{Id}_table")">
                <thead>
                    <tr>
                        @if (ShowCheckbox)
                        {
                            <th class="table-col-checkbox"><Checkbox TItem="TItem" SetCheckCallback="CheckState" OnClick="ToggleCheck"></Checkbox></th>
                        }
                        @if (ShowLineNo)
                        {
                            <th class="table-col-lineno">行号</th>
                        }
                        <TableHeader OnSort="OnSort">
                            @TableHeader?.Invoke(EditModel)
                        </TableHeader>
                        @if (ShowExtendButtons)
                        {
                            <th>@ButtonTemplateHeaderText</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (int index = 0; index < Items.Count(); index++)
                    {
                        <tr>
                            @if (ShowCheckbox)
                            {
                                <td class="table-col-checkbox"><Checkbox TItem="TItem" Item="Items.ElementAt(index)" SetCheckCallback="item => SelectedItems.Contains(item) ? CheckBoxState.Checked : CheckBoxState.UnChecked" OnClick="ToggleCheck"></Checkbox></td>
                            }
                            @if (ShowLineNo)
                            {
                                <td class="table-col-lineno">@(index + 1 + (PageIndex - 1) * PageItems)</td>
                            }
                            @RowTemplate?.Invoke(Items.ElementAt(index))
                            @if (ShowExtendButtons)
                            {
                                <td>@ButtonTemplate?.Invoke(Items.ElementAt(index))</td>
                            }
                        </tr>
                    }
                </tbody>
                @if (ShowFooter)
                {
                    <tfoot>
                        <tr>@TableFooter</tr>
                    </tfoot>
                }
            </table>
        }
    </div>
    @if (ShowPagination)
    {
        <Pagination PageItems="PageItems" TotalCount="TotalCount" PageIndex="PageIndex" OnPageClick="PageClick" OnPageItemsChange="PageItemsChange"></Pagination>
    }
</div>

@if (OnDelete != null)
{
    <Modal @ref="ConfirmModal" Id="@($"{Id}_confirm")" Title="資料刪除">
        <ModalBody>
            <div class="modal-confirm-body">您確定要刪除選中的所有資料吗？</div>
        </ModalBody>
        <ModalFooter>
            <button type="button" class="btn btn-danger" @onclick="Confirm">
                <i class="fa fa-trash-o"></i>
                <span>我要刪除</span>
            </button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">
                <i class="fa fa-times"></i>
                <span>取消</span>
            </button>
        </ModalFooter>
    </Modal>
}

@if (OnSave != null || OnAdd != null)
{
    <SubmitModal @ref="EditModal" Id="@($"{Id}_edit")" TItem="TItem" Title="@SubmitModalTitle" Size="ModalSize.ExtraLarge" @bind-Model="EditModel" OnValidSubmit="Save">
        <ModalBody>
            @EditTemplate?.Invoke(EditModel)
        </ModalBody>
    </SubmitModal>
}

@if (ShowSearch && ShowAdvancedSearch)
{
    <Modal @ref="SearchModal" Id="@($"{Id}_search")" Title="查詢條件">
        <ModalBody>
            <LgbEditForm class="form-inline" Id="@Id" Model="QueryModel">
                <div class="row">
                    @SearchTemplate?.Invoke(QueryModel)
                </div>
            </LgbEditForm>
        </ModalBody>
        <ModalFooter>
            <button type="button" class="btn btn-info" data-dismiss="modal" @onclick="ResetSearchClick">
                <i class="fa fa-trash-o"></i>
                <span>重置</span>
            </button>
            <button type="button" class="btn btn-primary" data-dismiss="modal" @onclick="SearchClick">
                <i class="fa fa-search"></i>
                <span>查詢</span>
            </button>
        </ModalFooter>
    </Modal>
}
